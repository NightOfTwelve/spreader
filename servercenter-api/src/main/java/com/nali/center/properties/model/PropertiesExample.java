package com.nali.center.properties.model;

import com.nali.common.model.Limit;
import com.nali.common.model.Shard;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class PropertiesExample {
    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    private Shard shard;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    private Limit limit;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public PropertiesExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    protected PropertiesExample(PropertiesExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_properties
     *
     * @ibatorgenerated Wed Mar 28 13:36:44 CST 2012
     */
    public static class Criteria {
        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0
                || criteriaWithSingleValue.size() > 0
                || criteriaWithListValue.size() > 0
                || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andModNameIsNull() {
            addCriterion("mod_name is null");
            return this;
        }

        public Criteria andModNameIsNotNull() {
            addCriterion("mod_name is not null");
            return this;
        }

        public Criteria andModNameEqualTo(String value) {
            addCriterion("mod_name =", value, "modName");
            return this;
        }

        public Criteria andModNameNotEqualTo(String value) {
            addCriterion("mod_name <>", value, "modName");
            return this;
        }

        public Criteria andModNameGreaterThan(String value) {
            addCriterion("mod_name >", value, "modName");
            return this;
        }

        public Criteria andModNameGreaterThanOrEqualTo(String value) {
            addCriterion("mod_name >=", value, "modName");
            return this;
        }

        public Criteria andModNameLessThan(String value) {
            addCriterion("mod_name <", value, "modName");
            return this;
        }

        public Criteria andModNameLessThanOrEqualTo(String value) {
            addCriterion("mod_name <=", value, "modName");
            return this;
        }

        public Criteria andModNameLike(String value) {
            addCriterion("mod_name like", value, "modName");
            return this;
        }

        public Criteria andModNameNotLike(String value) {
            addCriterion("mod_name not like", value, "modName");
            return this;
        }

        public Criteria andModNameIn(List<String> values) {
            addCriterion("mod_name in", values, "modName");
            return this;
        }

        public Criteria andModNameNotIn(List<String> values) {
            addCriterion("mod_name not in", values, "modName");
            return this;
        }

        public Criteria andModNameBetween(String value1, String value2) {
            addCriterion("mod_name between", value1, value2, "modName");
            return this;
        }

        public Criteria andModNameNotBetween(String value1, String value2) {
            addCriterion("mod_name not between", value1, value2, "modName");
            return this;
        }

        public Criteria andPropertyNameIsNull() {
            addCriterion("property_name is null");
            return this;
        }

        public Criteria andPropertyNameIsNotNull() {
            addCriterion("property_name is not null");
            return this;
        }

        public Criteria andPropertyNameEqualTo(String value) {
            addCriterion("property_name =", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameNotEqualTo(String value) {
            addCriterion("property_name <>", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameGreaterThan(String value) {
            addCriterion("property_name >", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameGreaterThanOrEqualTo(String value) {
            addCriterion("property_name >=", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameLessThan(String value) {
            addCriterion("property_name <", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameLessThanOrEqualTo(String value) {
            addCriterion("property_name <=", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameLike(String value) {
            addCriterion("property_name like", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameNotLike(String value) {
            addCriterion("property_name not like", value, "propertyName");
            return this;
        }

        public Criteria andPropertyNameIn(List<String> values) {
            addCriterion("property_name in", values, "propertyName");
            return this;
        }

        public Criteria andPropertyNameNotIn(List<String> values) {
            addCriterion("property_name not in", values, "propertyName");
            return this;
        }

        public Criteria andPropertyNameBetween(String value1, String value2) {
            addCriterion("property_name between", value1, value2, "propertyName");
            return this;
        }

        public Criteria andPropertyNameNotBetween(String value1, String value2) {
            addCriterion("property_name not between", value1, value2, "propertyName");
            return this;
        }

        public Criteria andSubPropertyNameIsNull() {
            addCriterion("sub_property_name is null");
            return this;
        }

        public Criteria andSubPropertyNameIsNotNull() {
            addCriterion("sub_property_name is not null");
            return this;
        }

        public Criteria andSubPropertyNameEqualTo(String value) {
            addCriterion("sub_property_name =", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameNotEqualTo(String value) {
            addCriterion("sub_property_name <>", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameGreaterThan(String value) {
            addCriterion("sub_property_name >", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameGreaterThanOrEqualTo(String value) {
            addCriterion("sub_property_name >=", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameLessThan(String value) {
            addCriterion("sub_property_name <", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameLessThanOrEqualTo(String value) {
            addCriterion("sub_property_name <=", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameLike(String value) {
            addCriterion("sub_property_name like", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameNotLike(String value) {
            addCriterion("sub_property_name not like", value, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameIn(List<String> values) {
            addCriterion("sub_property_name in", values, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameNotIn(List<String> values) {
            addCriterion("sub_property_name not in", values, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameBetween(String value1, String value2) {
            addCriterion("sub_property_name between", value1, value2, "subPropertyName");
            return this;
        }

        public Criteria andSubPropertyNameNotBetween(String value1, String value2) {
            addCriterion("sub_property_name not between", value1, value2, "subPropertyName");
            return this;
        }

        public Criteria andPropertyValueIsNull() {
            addCriterion("property_value is null");
            return this;
        }

        public Criteria andPropertyValueIsNotNull() {
            addCriterion("property_value is not null");
            return this;
        }

        public Criteria andPropertyValueEqualTo(String value) {
            addCriterion("property_value =", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueNotEqualTo(String value) {
            addCriterion("property_value <>", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueGreaterThan(String value) {
            addCriterion("property_value >", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueGreaterThanOrEqualTo(String value) {
            addCriterion("property_value >=", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueLessThan(String value) {
            addCriterion("property_value <", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueLessThanOrEqualTo(String value) {
            addCriterion("property_value <=", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueLike(String value) {
            addCriterion("property_value like", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueNotLike(String value) {
            addCriterion("property_value not like", value, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueIn(List<String> values) {
            addCriterion("property_value in", values, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueNotIn(List<String> values) {
            addCriterion("property_value not in", values, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueBetween(String value1, String value2) {
            addCriterion("property_value between", value1, value2, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueNotBetween(String value1, String value2) {
            addCriterion("property_value not between", value1, value2, "propertyValue");
            return this;
        }

        public Criteria andPropertyValueTypeIsNull() {
            addCriterion("property_value_type is null");
            return this;
        }

        public Criteria andPropertyValueTypeIsNotNull() {
            addCriterion("property_value_type is not null");
            return this;
        }

        public Criteria andPropertyValueTypeEqualTo(String value) {
            addCriterion("property_value_type =", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeNotEqualTo(String value) {
            addCriterion("property_value_type <>", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeGreaterThan(String value) {
            addCriterion("property_value_type >", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeGreaterThanOrEqualTo(String value) {
            addCriterion("property_value_type >=", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeLessThan(String value) {
            addCriterion("property_value_type <", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeLessThanOrEqualTo(String value) {
            addCriterion("property_value_type <=", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeLike(String value) {
            addCriterion("property_value_type like", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeNotLike(String value) {
            addCriterion("property_value_type not like", value, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeIn(List<String> values) {
            addCriterion("property_value_type in", values, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeNotIn(List<String> values) {
            addCriterion("property_value_type not in", values, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeBetween(String value1, String value2) {
            addCriterion("property_value_type between", value1, value2, "propertyValueType");
            return this;
        }

        public Criteria andPropertyValueTypeNotBetween(String value1, String value2) {
            addCriterion("property_value_type not between", value1, value2, "propertyValueType");
            return this;
        }

        public Criteria andPropertyTypeIsNull() {
            addCriterion("property_type is null");
            return this;
        }

        public Criteria andPropertyTypeIsNotNull() {
            addCriterion("property_type is not null");
            return this;
        }

        public Criteria andPropertyTypeEqualTo(Integer value) {
            addCriterion("property_type =", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeNotEqualTo(Integer value) {
            addCriterion("property_type <>", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeGreaterThan(Integer value) {
            addCriterion("property_type >", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("property_type >=", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeLessThan(Integer value) {
            addCriterion("property_type <", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeLessThanOrEqualTo(Integer value) {
            addCriterion("property_type <=", value, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeIn(List<Integer> values) {
            addCriterion("property_type in", values, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeNotIn(List<Integer> values) {
            addCriterion("property_type not in", values, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeBetween(Integer value1, Integer value2) {
            addCriterion("property_type between", value1, value2, "propertyType");
            return this;
        }

        public Criteria andPropertyTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("property_type not between", value1, value2, "propertyType");
            return this;
        }
    }
}