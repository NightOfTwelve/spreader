package com.nali.spreader.data;

import com.nali.common.model.Limit;
import com.nali.common.model.Shard;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class NoticeExample {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Mon Jul 02 13:58:25 CST 2012
     */
    public NoticeExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Mon Jul 02 13:58:25 CST 2012
     */
    protected NoticeExample(NoticeExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    private Shard shard;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    private Limit limit;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_notice
     *
     * @ibatorgenerated Wed Jul 04 15:20:21 CST 2012
     */
    public static class Criteria {

        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andWebsiteIdIsNull() {
            addCriterion("website_id is null");
            return this;
        }

        public Criteria andWebsiteIdIsNotNull() {
            addCriterion("website_id is not null");
            return this;
        }

        public Criteria andWebsiteIdEqualTo(Integer value) {
            addCriterion("website_id =", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdNotEqualTo(Integer value) {
            addCriterion("website_id <>", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdGreaterThan(Integer value) {
            addCriterion("website_id >", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("website_id >=", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdLessThan(Integer value) {
            addCriterion("website_id <", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdLessThanOrEqualTo(Integer value) {
            addCriterion("website_id <=", value, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdIn(List<Integer> values) {
            addCriterion("website_id in", values, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdNotIn(List<Integer> values) {
            addCriterion("website_id not in", values, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdBetween(Integer value1, Integer value2) {
            addCriterion("website_id between", value1, value2, "websiteId");
            return this;
        }

        public Criteria andWebsiteIdNotBetween(Integer value1, Integer value2) {
            addCriterion("website_id not between", value1, value2, "websiteId");
            return this;
        }

        public Criteria andNoticeTypeIsNull() {
            addCriterion("notice_type is null");
            return this;
        }

        public Criteria andNoticeTypeIsNotNull() {
            addCriterion("notice_type is not null");
            return this;
        }

        public Criteria andNoticeTypeEqualTo(Integer value) {
            addCriterion("notice_type =", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeNotEqualTo(Integer value) {
            addCriterion("notice_type <>", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeGreaterThan(Integer value) {
            addCriterion("notice_type >", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("notice_type >=", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeLessThan(Integer value) {
            addCriterion("notice_type <", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeLessThanOrEqualTo(Integer value) {
            addCriterion("notice_type <=", value, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeIn(List<Integer> values) {
            addCriterion("notice_type in", values, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeNotIn(List<Integer> values) {
            addCriterion("notice_type not in", values, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeBetween(Integer value1, Integer value2) {
            addCriterion("notice_type between", value1, value2, "noticeType");
            return this;
        }

        public Criteria andNoticeTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("notice_type not between", value1, value2, "noticeType");
            return this;
        }

        public Criteria andToUidIsNull() {
            addCriterion("to_uid is null");
            return this;
        }

        public Criteria andToUidIsNotNull() {
            addCriterion("to_uid is not null");
            return this;
        }

        public Criteria andToUidEqualTo(Long value) {
            addCriterion("to_uid =", value, "toUid");
            return this;
        }

        public Criteria andToUidNotEqualTo(Long value) {
            addCriterion("to_uid <>", value, "toUid");
            return this;
        }

        public Criteria andToUidGreaterThan(Long value) {
            addCriterion("to_uid >", value, "toUid");
            return this;
        }

        public Criteria andToUidGreaterThanOrEqualTo(Long value) {
            addCriterion("to_uid >=", value, "toUid");
            return this;
        }

        public Criteria andToUidLessThan(Long value) {
            addCriterion("to_uid <", value, "toUid");
            return this;
        }

        public Criteria andToUidLessThanOrEqualTo(Long value) {
            addCriterion("to_uid <=", value, "toUid");
            return this;
        }

        public Criteria andToUidIn(List<Long> values) {
            addCriterion("to_uid in", values, "toUid");
            return this;
        }

        public Criteria andToUidNotIn(List<Long> values) {
            addCriterion("to_uid not in", values, "toUid");
            return this;
        }

        public Criteria andToUidBetween(Long value1, Long value2) {
            addCriterion("to_uid between", value1, value2, "toUid");
            return this;
        }

        public Criteria andToUidNotBetween(Long value1, Long value2) {
            addCriterion("to_uid not between", value1, value2, "toUid");
            return this;
        }

        public Criteria andFromUidIsNull() {
            addCriterion("from_uid is null");
            return this;
        }

        public Criteria andFromUidIsNotNull() {
            addCriterion("from_uid is not null");
            return this;
        }

        public Criteria andFromUidEqualTo(Long value) {
            addCriterion("from_uid =", value, "fromUid");
            return this;
        }

        public Criteria andFromUidNotEqualTo(Long value) {
            addCriterion("from_uid <>", value, "fromUid");
            return this;
        }

        public Criteria andFromUidGreaterThan(Long value) {
            addCriterion("from_uid >", value, "fromUid");
            return this;
        }

        public Criteria andFromUidGreaterThanOrEqualTo(Long value) {
            addCriterion("from_uid >=", value, "fromUid");
            return this;
        }

        public Criteria andFromUidLessThan(Long value) {
            addCriterion("from_uid <", value, "fromUid");
            return this;
        }

        public Criteria andFromUidLessThanOrEqualTo(Long value) {
            addCriterion("from_uid <=", value, "fromUid");
            return this;
        }

        public Criteria andFromUidIn(List<Long> values) {
            addCriterion("from_uid in", values, "fromUid");
            return this;
        }

        public Criteria andFromUidNotIn(List<Long> values) {
            addCriterion("from_uid not in", values, "fromUid");
            return this;
        }

        public Criteria andFromUidBetween(Long value1, Long value2) {
            addCriterion("from_uid between", value1, value2, "fromUid");
            return this;
        }

        public Criteria andFromUidNotBetween(Long value1, Long value2) {
            addCriterion("from_uid not between", value1, value2, "fromUid");
            return this;
        }

        public Criteria andFromWebsiteUidIsNull() {
            addCriterion("from_website_uid is null");
            return this;
        }

        public Criteria andFromWebsiteUidIsNotNull() {
            addCriterion("from_website_uid is not null");
            return this;
        }

        public Criteria andFromWebsiteUidEqualTo(Long value) {
            addCriterion("from_website_uid =", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidNotEqualTo(Long value) {
            addCriterion("from_website_uid <>", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidGreaterThan(Long value) {
            addCriterion("from_website_uid >", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidGreaterThanOrEqualTo(Long value) {
            addCriterion("from_website_uid >=", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidLessThan(Long value) {
            addCriterion("from_website_uid <", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidLessThanOrEqualTo(Long value) {
            addCriterion("from_website_uid <=", value, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidIn(List<Long> values) {
            addCriterion("from_website_uid in", values, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidNotIn(List<Long> values) {
            addCriterion("from_website_uid not in", values, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidBetween(Long value1, Long value2) {
            addCriterion("from_website_uid between", value1, value2, "fromWebsiteUid");
            return this;
        }

        public Criteria andFromWebsiteUidNotBetween(Long value1, Long value2) {
            addCriterion("from_website_uid not between", value1, value2, "fromWebsiteUid");
            return this;
        }

        public Criteria andReplayIdIsNull() {
            addCriterion("replay_id is null");
            return this;
        }

        public Criteria andReplayIdIsNotNull() {
            addCriterion("replay_id is not null");
            return this;
        }

        public Criteria andReplayIdEqualTo(Long value) {
            addCriterion("replay_id =", value, "replayId");
            return this;
        }

        public Criteria andReplayIdNotEqualTo(Long value) {
            addCriterion("replay_id <>", value, "replayId");
            return this;
        }

        public Criteria andReplayIdGreaterThan(Long value) {
            addCriterion("replay_id >", value, "replayId");
            return this;
        }

        public Criteria andReplayIdGreaterThanOrEqualTo(Long value) {
            addCriterion("replay_id >=", value, "replayId");
            return this;
        }

        public Criteria andReplayIdLessThan(Long value) {
            addCriterion("replay_id <", value, "replayId");
            return this;
        }

        public Criteria andReplayIdLessThanOrEqualTo(Long value) {
            addCriterion("replay_id <=", value, "replayId");
            return this;
        }

        public Criteria andReplayIdIn(List<Long> values) {
            addCriterion("replay_id in", values, "replayId");
            return this;
        }

        public Criteria andReplayIdNotIn(List<Long> values) {
            addCriterion("replay_id not in", values, "replayId");
            return this;
        }

        public Criteria andReplayIdBetween(Long value1, Long value2) {
            addCriterion("replay_id between", value1, value2, "replayId");
            return this;
        }

        public Criteria andReplayIdNotBetween(Long value1, Long value2) {
            addCriterion("replay_id not between", value1, value2, "replayId");
            return this;
        }

        public Criteria andContentIdIsNull() {
            addCriterion("content_id is null");
            return this;
        }

        public Criteria andContentIdIsNotNull() {
            addCriterion("content_id is not null");
            return this;
        }

        public Criteria andContentIdEqualTo(Long value) {
            addCriterion("content_id =", value, "contentId");
            return this;
        }

        public Criteria andContentIdNotEqualTo(Long value) {
            addCriterion("content_id <>", value, "contentId");
            return this;
        }

        public Criteria andContentIdGreaterThan(Long value) {
            addCriterion("content_id >", value, "contentId");
            return this;
        }

        public Criteria andContentIdGreaterThanOrEqualTo(Long value) {
            addCriterion("content_id >=", value, "contentId");
            return this;
        }

        public Criteria andContentIdLessThan(Long value) {
            addCriterion("content_id <", value, "contentId");
            return this;
        }

        public Criteria andContentIdLessThanOrEqualTo(Long value) {
            addCriterion("content_id <=", value, "contentId");
            return this;
        }

        public Criteria andContentIdIn(List<Long> values) {
            addCriterion("content_id in", values, "contentId");
            return this;
        }

        public Criteria andContentIdNotIn(List<Long> values) {
            addCriterion("content_id not in", values, "contentId");
            return this;
        }

        public Criteria andContentIdBetween(Long value1, Long value2) {
            addCriterion("content_id between", value1, value2, "contentId");
            return this;
        }

        public Criteria andContentIdNotBetween(Long value1, Long value2) {
            addCriterion("content_id not between", value1, value2, "contentId");
            return this;
        }

        public Criteria andIsFromRobotIsNull() {
            addCriterion("is_from_robot is null");
            return this;
        }

        public Criteria andIsFromRobotIsNotNull() {
            addCriterion("is_from_robot is not null");
            return this;
        }

        public Criteria andIsFromRobotEqualTo(Boolean value) {
            addCriterion("is_from_robot =", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotNotEqualTo(Boolean value) {
            addCriterion("is_from_robot <>", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotGreaterThan(Boolean value) {
            addCriterion("is_from_robot >", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotGreaterThanOrEqualTo(Boolean value) {
            addCriterion("is_from_robot >=", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotLessThan(Boolean value) {
            addCriterion("is_from_robot <", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotLessThanOrEqualTo(Boolean value) {
            addCriterion("is_from_robot <=", value, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotIn(List<Boolean> values) {
            addCriterion("is_from_robot in", values, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotNotIn(List<Boolean> values) {
            addCriterion("is_from_robot not in", values, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_from_robot between", value1, value2, "isFromRobot");
            return this;
        }

        public Criteria andIsFromRobotNotBetween(Boolean value1, Boolean value2) {
            addCriterion("is_from_robot not between", value1, value2, "isFromRobot");
            return this;
        }
    }
}
