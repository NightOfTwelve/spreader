package com.nali.spreader.data;

import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Iterator;
import java.util.List;
import java.util.Map;
import com.nali.common.model.Limit;
import com.nali.common.model.Shard;

public class CtrlGroupConflictExample {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Wed Mar 28 17:26:45 CST 2012
     */
    public CtrlGroupConflictExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Wed Mar 28 17:26:45 CST 2012
     */
    protected CtrlGroupConflictExample(CtrlGroupConflictExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    private Shard shard;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    private Limit limit;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public static class Criteria {

        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        public Criteria andIdIsNull() {
            addCriterion("id is null");
            return this;
        }

        public Criteria andIdIsNotNull() {
            addCriterion("id is not null");
            return this;
        }

        public Criteria andIdEqualTo(Long value) {
            addCriterion("id =", value, "id");
            return this;
        }

        public Criteria andIdNotEqualTo(Long value) {
            addCriterion("id <>", value, "id");
            return this;
        }

        public Criteria andIdGreaterThan(Long value) {
            addCriterion("id >", value, "id");
            return this;
        }

        public Criteria andIdGreaterThanOrEqualTo(Long value) {
            addCriterion("id >=", value, "id");
            return this;
        }

        public Criteria andIdLessThan(Long value) {
            addCriterion("id <", value, "id");
            return this;
        }

        public Criteria andIdLessThanOrEqualTo(Long value) {
            addCriterion("id <=", value, "id");
            return this;
        }

        public Criteria andIdIn(List<Long> values) {
            addCriterion("id in", values, "id");
            return this;
        }

        public Criteria andIdNotIn(List<Long> values) {
            addCriterion("id not in", values, "id");
            return this;
        }

        public Criteria andIdBetween(Long value1, Long value2) {
            addCriterion("id between", value1, value2, "id");
            return this;
        }

        public Criteria andIdNotBetween(Long value1, Long value2) {
            addCriterion("id not between", value1, value2, "id");
            return this;
        }

        public Criteria andUidIsNull() {
            addCriterion("uid is null");
            return this;
        }

        public Criteria andUidIsNotNull() {
            addCriterion("uid is not null");
            return this;
        }

        public Criteria andUidEqualTo(Long value) {
            addCriterion("uid =", value, "uid");
            return this;
        }

        public Criteria andUidNotEqualTo(Long value) {
            addCriterion("uid <>", value, "uid");
            return this;
        }

        public Criteria andUidGreaterThan(Long value) {
            addCriterion("uid >", value, "uid");
            return this;
        }

        public Criteria andUidGreaterThanOrEqualTo(Long value) {
            addCriterion("uid >=", value, "uid");
            return this;
        }

        public Criteria andUidLessThan(Long value) {
            addCriterion("uid <", value, "uid");
            return this;
        }

        public Criteria andUidLessThanOrEqualTo(Long value) {
            addCriterion("uid <=", value, "uid");
            return this;
        }

        public Criteria andUidIn(List<Long> values) {
            addCriterion("uid in", values, "uid");
            return this;
        }

        public Criteria andUidNotIn(List<Long> values) {
            addCriterion("uid not in", values, "uid");
            return this;
        }

        public Criteria andUidBetween(Long value1, Long value2) {
            addCriterion("uid between", value1, value2, "uid");
            return this;
        }

        public Criteria andUidNotBetween(Long value1, Long value2) {
            addCriterion("uid not between", value1, value2, "uid");
            return this;
        }

        public Criteria andOldGidIsNull() {
            addCriterion("old_gid is null");
            return this;
        }

        public Criteria andOldGidIsNotNull() {
            addCriterion("old_gid is not null");
            return this;
        }

        public Criteria andOldGidEqualTo(Long value) {
            addCriterion("old_gid =", value, "oldGid");
            return this;
        }

        public Criteria andOldGidNotEqualTo(Long value) {
            addCriterion("old_gid <>", value, "oldGid");
            return this;
        }

        public Criteria andOldGidGreaterThan(Long value) {
            addCriterion("old_gid >", value, "oldGid");
            return this;
        }

        public Criteria andOldGidGreaterThanOrEqualTo(Long value) {
            addCriterion("old_gid >=", value, "oldGid");
            return this;
        }

        public Criteria andOldGidLessThan(Long value) {
            addCriterion("old_gid <", value, "oldGid");
            return this;
        }

        public Criteria andOldGidLessThanOrEqualTo(Long value) {
            addCriterion("old_gid <=", value, "oldGid");
            return this;
        }

        public Criteria andOldGidIn(List<Long> values) {
            addCriterion("old_gid in", values, "oldGid");
            return this;
        }

        public Criteria andOldGidNotIn(List<Long> values) {
            addCriterion("old_gid not in", values, "oldGid");
            return this;
        }

        public Criteria andOldGidBetween(Long value1, Long value2) {
            addCriterion("old_gid between", value1, value2, "oldGid");
            return this;
        }

        public Criteria andOldGidNotBetween(Long value1, Long value2) {
            addCriterion("old_gid not between", value1, value2, "oldGid");
            return this;
        }

        public Criteria andNewGidIsNull() {
            addCriterion("new_gid is null");
            return this;
        }

        public Criteria andNewGidIsNotNull() {
            addCriterion("new_gid is not null");
            return this;
        }

        public Criteria andNewGidEqualTo(Long value) {
            addCriterion("new_gid =", value, "newGid");
            return this;
        }

        public Criteria andNewGidNotEqualTo(Long value) {
            addCriterion("new_gid <>", value, "newGid");
            return this;
        }

        public Criteria andNewGidGreaterThan(Long value) {
            addCriterion("new_gid >", value, "newGid");
            return this;
        }

        public Criteria andNewGidGreaterThanOrEqualTo(Long value) {
            addCriterion("new_gid >=", value, "newGid");
            return this;
        }

        public Criteria andNewGidLessThan(Long value) {
            addCriterion("new_gid <", value, "newGid");
            return this;
        }

        public Criteria andNewGidLessThanOrEqualTo(Long value) {
            addCriterion("new_gid <=", value, "newGid");
            return this;
        }

        public Criteria andNewGidIn(List<Long> values) {
            addCriterion("new_gid in", values, "newGid");
            return this;
        }

        public Criteria andNewGidNotIn(List<Long> values) {
            addCriterion("new_gid not in", values, "newGid");
            return this;
        }

        public Criteria andNewGidBetween(Long value1, Long value2) {
            addCriterion("new_gid between", value1, value2, "newGid");
            return this;
        }

        public Criteria andNewGidNotBetween(Long value1, Long value2) {
            addCriterion("new_gid not between", value1, value2, "newGid");
            return this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterionForJDBCDate("create_time =", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <>", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("create_time >", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time >=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterionForJDBCDate("create_time <", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("create_time <=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterionForJDBCDate("create_time in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("create_time not in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time between", value1, value2, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("create_time not between", value1, value2, "createTime");
            return this;
        }

        public Criteria andLastModifiedTimeIsNull() {
            addCriterion("last_modified_time is null");
            return this;
        }

        public Criteria andLastModifiedTimeIsNotNull() {
            addCriterion("last_modified_time is not null");
            return this;
        }

        public Criteria andLastModifiedTimeEqualTo(Date value) {
            addCriterionForJDBCDate("last_modified_time =", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotEqualTo(Date value) {
            addCriterionForJDBCDate("last_modified_time <>", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThan(Date value) {
            addCriterionForJDBCDate("last_modified_time >", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeGreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("last_modified_time >=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThan(Date value) {
            addCriterionForJDBCDate("last_modified_time <", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeLessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("last_modified_time <=", value, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeIn(List<Date> values) {
            addCriterionForJDBCDate("last_modified_time in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotIn(List<Date> values) {
            addCriterionForJDBCDate("last_modified_time not in", values, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("last_modified_time between", value1, value2, "lastModifiedTime");
            return this;
        }

        public Criteria andLastModifiedTimeNotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("last_modified_time not between", value1, value2, "lastModifiedTime");
            return this;
        }
    }
}
