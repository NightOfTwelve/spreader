package com.nali.spreader.model;

import com.nali.common.model.Limit;
import com.nali.common.model.Shard;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class ClientReportExample {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Wed May 08 10:05:15 CST 2013
     */
    public ClientReportExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Wed May 08 10:05:15 CST 2013
     */
    protected ClientReportExample(ClientReportExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    protected List<Criteria> oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    private Shard shard;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    private Limit limit;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_client_report
     *
     * @ibatorgenerated Thu Jul 25 13:47:02 CST 2013
     */
    public static class Criteria {

        protected List<String> criteriaWithoutValue;

        protected List<Map<String, Object>> criteriaWithSingleValue;

        protected List<Map<String, Object>> criteriaWithListValue;

        protected List<Map<String, Object>> criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList<String>();
            criteriaWithSingleValue = new ArrayList<Map<String, Object>>();
            criteriaWithListValue = new ArrayList<Map<String, Object>>();
            criteriaWithBetweenValue = new ArrayList<Map<String, Object>>();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List<String> getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List<Map<String, Object>> getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List<Map<String, Object>> getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List<Map<String, Object>> getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List<? extends Object> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List<Object> list = new ArrayList<Object>();
            list.add(value1);
            list.add(value2);
            Map<String, Object> map = new HashMap<String, Object>();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andClientIdIsNull() {
            addCriterion("client_id is null");
            return this;
        }

        public Criteria andClientIdIsNotNull() {
            addCriterion("client_id is not null");
            return this;
        }

        public Criteria andClientIdEqualTo(Long value) {
            addCriterion("client_id =", value, "clientId");
            return this;
        }

        public Criteria andClientIdNotEqualTo(Long value) {
            addCriterion("client_id <>", value, "clientId");
            return this;
        }

        public Criteria andClientIdGreaterThan(Long value) {
            addCriterion("client_id >", value, "clientId");
            return this;
        }

        public Criteria andClientIdGreaterThanOrEqualTo(Long value) {
            addCriterion("client_id >=", value, "clientId");
            return this;
        }

        public Criteria andClientIdLessThan(Long value) {
            addCriterion("client_id <", value, "clientId");
            return this;
        }

        public Criteria andClientIdLessThanOrEqualTo(Long value) {
            addCriterion("client_id <=", value, "clientId");
            return this;
        }

        public Criteria andClientIdIn(List<Long> values) {
            addCriterion("client_id in", values, "clientId");
            return this;
        }

        public Criteria andClientIdNotIn(List<Long> values) {
            addCriterion("client_id not in", values, "clientId");
            return this;
        }

        public Criteria andClientIdBetween(Long value1, Long value2) {
            addCriterion("client_id between", value1, value2, "clientId");
            return this;
        }

        public Criteria andClientIdNotBetween(Long value1, Long value2) {
            addCriterion("client_id not between", value1, value2, "clientId");
            return this;
        }

        public Criteria andClientSeqIsNull() {
            addCriterion("client_seq is null");
            return this;
        }

        public Criteria andClientSeqIsNotNull() {
            addCriterion("client_seq is not null");
            return this;
        }

        public Criteria andClientSeqEqualTo(Long value) {
            addCriterion("client_seq =", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqNotEqualTo(Long value) {
            addCriterion("client_seq <>", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqGreaterThan(Long value) {
            addCriterion("client_seq >", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqGreaterThanOrEqualTo(Long value) {
            addCriterion("client_seq >=", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqLessThan(Long value) {
            addCriterion("client_seq <", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqLessThanOrEqualTo(Long value) {
            addCriterion("client_seq <=", value, "clientSeq");
            return this;
        }

        public Criteria andClientSeqIn(List<Long> values) {
            addCriterion("client_seq in", values, "clientSeq");
            return this;
        }

        public Criteria andClientSeqNotIn(List<Long> values) {
            addCriterion("client_seq not in", values, "clientSeq");
            return this;
        }

        public Criteria andClientSeqBetween(Long value1, Long value2) {
            addCriterion("client_seq between", value1, value2, "clientSeq");
            return this;
        }

        public Criteria andClientSeqNotBetween(Long value1, Long value2) {
            addCriterion("client_seq not between", value1, value2, "clientSeq");
            return this;
        }

        public Criteria andTaskDateIsNull() {
            addCriterion("task_date is null");
            return this;
        }

        public Criteria andTaskDateIsNotNull() {
            addCriterion("task_date is not null");
            return this;
        }

        public Criteria andTaskDateEqualTo(Date value) {
            addCriterion("task_date =", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateNotEqualTo(Date value) {
            addCriterion("task_date <>", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateGreaterThan(Date value) {
            addCriterion("task_date >", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateGreaterThanOrEqualTo(Date value) {
            addCriterion("task_date >=", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateLessThan(Date value) {
            addCriterion("task_date <", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateLessThanOrEqualTo(Date value) {
            addCriterion("task_date <=", value, "taskDate");
            return this;
        }

        public Criteria andTaskDateIn(List<Date> values) {
            addCriterion("task_date in", values, "taskDate");
            return this;
        }

        public Criteria andTaskDateNotIn(List<Date> values) {
            addCriterion("task_date not in", values, "taskDate");
            return this;
        }

        public Criteria andTaskDateBetween(Date value1, Date value2) {
            addCriterion("task_date between", value1, value2, "taskDate");
            return this;
        }

        public Criteria andTaskDateNotBetween(Date value1, Date value2) {
            addCriterion("task_date not between", value1, value2, "taskDate");
            return this;
        }

        public Criteria andTaskTypeIsNull() {
            addCriterion("task_type is null");
            return this;
        }

        public Criteria andTaskTypeIsNotNull() {
            addCriterion("task_type is not null");
            return this;
        }

        public Criteria andTaskTypeEqualTo(Integer value) {
            addCriterion("task_type =", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotEqualTo(Integer value) {
            addCriterion("task_type <>", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThan(Integer value) {
            addCriterion("task_type >", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeGreaterThanOrEqualTo(Integer value) {
            addCriterion("task_type >=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThan(Integer value) {
            addCriterion("task_type <", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeLessThanOrEqualTo(Integer value) {
            addCriterion("task_type <=", value, "taskType");
            return this;
        }

        public Criteria andTaskTypeIn(List<Integer> values) {
            addCriterion("task_type in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotIn(List<Integer> values) {
            addCriterion("task_type not in", values, "taskType");
            return this;
        }

        public Criteria andTaskTypeBetween(Integer value1, Integer value2) {
            addCriterion("task_type between", value1, value2, "taskType");
            return this;
        }

        public Criteria andTaskTypeNotBetween(Integer value1, Integer value2) {
            addCriterion("task_type not between", value1, value2, "taskType");
            return this;
        }

        public Criteria andUpdateTimeIsNull() {
            addCriterion("update_time is null");
            return this;
        }

        public Criteria andUpdateTimeIsNotNull() {
            addCriterion("update_time is not null");
            return this;
        }

        public Criteria andUpdateTimeEqualTo(Date value) {
            addCriterion("update_time =", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotEqualTo(Date value) {
            addCriterion("update_time <>", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThan(Date value) {
            addCriterion("update_time >", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("update_time >=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThan(Date value) {
            addCriterion("update_time <", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeLessThanOrEqualTo(Date value) {
            addCriterion("update_time <=", value, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeIn(List<Date> values) {
            addCriterion("update_time in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotIn(List<Date> values) {
            addCriterion("update_time not in", values, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeBetween(Date value1, Date value2) {
            addCriterion("update_time between", value1, value2, "updateTime");
            return this;
        }

        public Criteria andUpdateTimeNotBetween(Date value1, Date value2) {
            addCriterion("update_time not between", value1, value2, "updateTime");
            return this;
        }

        public Criteria andCreateTimeIsNull() {
            addCriterion("create_time is null");
            return this;
        }

        public Criteria andCreateTimeIsNotNull() {
            addCriterion("create_time is not null");
            return this;
        }

        public Criteria andCreateTimeEqualTo(Date value) {
            addCriterion("create_time =", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotEqualTo(Date value) {
            addCriterion("create_time <>", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThan(Date value) {
            addCriterion("create_time >", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeGreaterThanOrEqualTo(Date value) {
            addCriterion("create_time >=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThan(Date value) {
            addCriterion("create_time <", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeLessThanOrEqualTo(Date value) {
            addCriterion("create_time <=", value, "createTime");
            return this;
        }

        public Criteria andCreateTimeIn(List<Date> values) {
            addCriterion("create_time in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotIn(List<Date> values) {
            addCriterion("create_time not in", values, "createTime");
            return this;
        }

        public Criteria andCreateTimeBetween(Date value1, Date value2) {
            addCriterion("create_time between", value1, value2, "createTime");
            return this;
        }

        public Criteria andCreateTimeNotBetween(Date value1, Date value2) {
            addCriterion("create_time not between", value1, value2, "createTime");
            return this;
        }

        public Criteria andExpectCountIsNull() {
            addCriterion("expect_count is null");
            return this;
        }

        public Criteria andExpectCountIsNotNull() {
            addCriterion("expect_count is not null");
            return this;
        }

        public Criteria andExpectCountEqualTo(Integer value) {
            addCriterion("expect_count =", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountNotEqualTo(Integer value) {
            addCriterion("expect_count <>", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountGreaterThan(Integer value) {
            addCriterion("expect_count >", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("expect_count >=", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountLessThan(Integer value) {
            addCriterion("expect_count <", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountLessThanOrEqualTo(Integer value) {
            addCriterion("expect_count <=", value, "expectCount");
            return this;
        }

        public Criteria andExpectCountIn(List<Integer> values) {
            addCriterion("expect_count in", values, "expectCount");
            return this;
        }

        public Criteria andExpectCountNotIn(List<Integer> values) {
            addCriterion("expect_count not in", values, "expectCount");
            return this;
        }

        public Criteria andExpectCountBetween(Integer value1, Integer value2) {
            addCriterion("expect_count between", value1, value2, "expectCount");
            return this;
        }

        public Criteria andExpectCountNotBetween(Integer value1, Integer value2) {
            addCriterion("expect_count not between", value1, value2, "expectCount");
            return this;
        }

        public Criteria andActualCountIsNull() {
            addCriterion("actual_count is null");
            return this;
        }

        public Criteria andActualCountIsNotNull() {
            addCriterion("actual_count is not null");
            return this;
        }

        public Criteria andActualCountEqualTo(Integer value) {
            addCriterion("actual_count =", value, "actualCount");
            return this;
        }

        public Criteria andActualCountNotEqualTo(Integer value) {
            addCriterion("actual_count <>", value, "actualCount");
            return this;
        }

        public Criteria andActualCountGreaterThan(Integer value) {
            addCriterion("actual_count >", value, "actualCount");
            return this;
        }

        public Criteria andActualCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("actual_count >=", value, "actualCount");
            return this;
        }

        public Criteria andActualCountLessThan(Integer value) {
            addCriterion("actual_count <", value, "actualCount");
            return this;
        }

        public Criteria andActualCountLessThanOrEqualTo(Integer value) {
            addCriterion("actual_count <=", value, "actualCount");
            return this;
        }

        public Criteria andActualCountIn(List<Integer> values) {
            addCriterion("actual_count in", values, "actualCount");
            return this;
        }

        public Criteria andActualCountNotIn(List<Integer> values) {
            addCriterion("actual_count not in", values, "actualCount");
            return this;
        }

        public Criteria andActualCountBetween(Integer value1, Integer value2) {
            addCriterion("actual_count between", value1, value2, "actualCount");
            return this;
        }

        public Criteria andActualCountNotBetween(Integer value1, Integer value2) {
            addCriterion("actual_count not between", value1, value2, "actualCount");
            return this;
        }

        public Criteria andActionIdIsNull() {
            addCriterion("action_id is null");
            return this;
        }

        public Criteria andActionIdIsNotNull() {
            addCriterion("action_id is not null");
            return this;
        }

        public Criteria andActionIdEqualTo(Long value) {
            addCriterion("action_id =", value, "actionId");
            return this;
        }

        public Criteria andActionIdNotEqualTo(Long value) {
            addCriterion("action_id <>", value, "actionId");
            return this;
        }

        public Criteria andActionIdGreaterThan(Long value) {
            addCriterion("action_id >", value, "actionId");
            return this;
        }

        public Criteria andActionIdGreaterThanOrEqualTo(Long value) {
            addCriterion("action_id >=", value, "actionId");
            return this;
        }

        public Criteria andActionIdLessThan(Long value) {
            addCriterion("action_id <", value, "actionId");
            return this;
        }

        public Criteria andActionIdLessThanOrEqualTo(Long value) {
            addCriterion("action_id <=", value, "actionId");
            return this;
        }

        public Criteria andActionIdIn(List<Long> values) {
            addCriterion("action_id in", values, "actionId");
            return this;
        }

        public Criteria andActionIdNotIn(List<Long> values) {
            addCriterion("action_id not in", values, "actionId");
            return this;
        }

        public Criteria andActionIdBetween(Long value1, Long value2) {
            addCriterion("action_id between", value1, value2, "actionId");
            return this;
        }

        public Criteria andActionIdNotBetween(Long value1, Long value2) {
            addCriterion("action_id not between", value1, value2, "actionId");
            return this;
        }

        public Criteria andAppNameIsNull() {
            addCriterion("app_name is null");
            return this;
        }

        public Criteria andAppNameIsNotNull() {
            addCriterion("app_name is not null");
            return this;
        }

        public Criteria andAppNameEqualTo(String value) {
            addCriterion("app_name =", value, "appName");
            return this;
        }

        public Criteria andAppNameNotEqualTo(String value) {
            addCriterion("app_name <>", value, "appName");
            return this;
        }

        public Criteria andAppNameGreaterThan(String value) {
            addCriterion("app_name >", value, "appName");
            return this;
        }

        public Criteria andAppNameGreaterThanOrEqualTo(String value) {
            addCriterion("app_name >=", value, "appName");
            return this;
        }

        public Criteria andAppNameLessThan(String value) {
            addCriterion("app_name <", value, "appName");
            return this;
        }

        public Criteria andAppNameLessThanOrEqualTo(String value) {
            addCriterion("app_name <=", value, "appName");
            return this;
        }

        public Criteria andAppNameLike(String value) {
            addCriterion("app_name like", value, "appName");
            return this;
        }

        public Criteria andAppNameNotLike(String value) {
            addCriterion("app_name not like", value, "appName");
            return this;
        }

        public Criteria andAppNameIn(List<String> values) {
            addCriterion("app_name in", values, "appName");
            return this;
        }

        public Criteria andAppNameNotIn(List<String> values) {
            addCriterion("app_name not in", values, "appName");
            return this;
        }

        public Criteria andAppNameBetween(String value1, String value2) {
            addCriterion("app_name between", value1, value2, "appName");
            return this;
        }

        public Criteria andAppNameNotBetween(String value1, String value2) {
            addCriterion("app_name not between", value1, value2, "appName");
            return this;
        }

        public Criteria andSuccessCountIsNull() {
            addCriterion("success_count is null");
            return this;
        }

        public Criteria andSuccessCountIsNotNull() {
            addCriterion("success_count is not null");
            return this;
        }

        public Criteria andSuccessCountEqualTo(Integer value) {
            addCriterion("success_count =", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountNotEqualTo(Integer value) {
            addCriterion("success_count <>", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountGreaterThan(Integer value) {
            addCriterion("success_count >", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountGreaterThanOrEqualTo(Integer value) {
            addCriterion("success_count >=", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountLessThan(Integer value) {
            addCriterion("success_count <", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountLessThanOrEqualTo(Integer value) {
            addCriterion("success_count <=", value, "successCount");
            return this;
        }

        public Criteria andSuccessCountIn(List<Integer> values) {
            addCriterion("success_count in", values, "successCount");
            return this;
        }

        public Criteria andSuccessCountNotIn(List<Integer> values) {
            addCriterion("success_count not in", values, "successCount");
            return this;
        }

        public Criteria andSuccessCountBetween(Integer value1, Integer value2) {
            addCriterion("success_count between", value1, value2, "successCount");
            return this;
        }

        public Criteria andSuccessCountNotBetween(Integer value1, Integer value2) {
            addCriterion("success_count not between", value1, value2, "successCount");
            return this;
        }
    }
}
