<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
	xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:context="http://www.springframework.org/schema/context"
	xmlns:aop="http://www.springframework.org/schema/aop" xmlns:tx="http://www.springframework.org/schema/tx"
	xmlns:util="http://www.springframework.org/schema/util"
	xsi:schemaLocation="http://www.springframework.org/schema/beans
		http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
		http://www.springframework.org/schema/aop
		http://www.springframework.org/schema/aop/spring-aop-3.0.xsd
		http://www.springframework.org/schema/context
		http://www.springframework.org/schema/context/spring-context-3.0.xsd
		http://www.springframework.org/schema/tx
		http://www.springframework.org/schema/tx/spring-tx-3.0.xsd
		http://www.springframework.org/schema/util
		http://www.springframework.org/schema/util/spring-util-3.0.xsd
		"
	default-lazy-init="true">
	<context:annotation-config />
	<context:component-scan base-package="com.nali.spreader" />
	<bean id="propertyConfigurer"
		class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
		<property name="locations">
			<list>
				<value>classpath:jdbc.properties</value>
				<value>classpath:urls.properties</value>
				<value>classpath:env.properties</value>
			</list>
		</property>
	</bean>
	<util:properties id="redis" location="classpath:redis.properties" />

	<!-- 主库 -->
	<bean id="dbDataSource" class="com.mchange.v2.c3p0.ComboPooledDataSource"
		destroy-method="close" lazy-init="false">
		<property name="driverClass">
			<value>${mysql.driver}</value>
		</property>
		<property name="jdbcUrl">
			<value>${jdbc.url}</value>
		</property>
		<property name="user">
			<value>${jdbc.username}</value>
		</property>
		<property name="password">
			<value>${jdbc.password}</value>
		</property>
		<property name="initialPoolSize">
			<value>${sdb.initialPoolSize}</value>
		</property>
		<property name="minPoolSize">
			<value>${sdb.minPoolSize}</value>
		</property>
		<property name="maxPoolSize">
			<value>${sdb.maxPoolSize}</value>
		</property>
		<property name="acquireIncrement">
			<value>${sdb.acquireIncrement}</value>
		</property>
		<property name="maxIdleTime">
			<value>${sdb.maxIdleTime}</value>
		</property>
		<property name="checkoutTimeout">
			<value>${sdb.checkoutTimeout}</value>
		</property>
	</bean>

	<bean id="txManager"
		class="org.springframework.jdbc.datasource.DataSourceTransactionManager">
		<property name="dataSource" ref="dbDataSource" />
	</bean>

	<!-- 用@transactional注解设置事务 ，在需要事务的类和方法上添加 -->
	<tx:annotation-driven transaction-manager="txManager" />

	<bean id="sqlMapClient" class="org.springframework.orm.ibatis.SqlMapClientFactoryBean">
		<property name="configLocation" value="classpath:ibatis/sqlmap-config.xml" />
		<property name="dataSource" ref="dbDataSource" />
	</bean>
	<bean id="sqlMap" class="org.springframework.orm.ibatis.SqlMapClientTemplate">
		<property name="sqlMapClient" ref="sqlMapClient" />
	</bean>

	<bean id="messageSource"
		class="org.springframework.context.support.ResourceBundleMessageSource">
		<property name="basenames">
			<list>
				<value>error</value>
				<value>message</value>
			</list>
		</property>
	</bean>
	<!-- autowire -->
	<bean id="productLineAnnotationResolver"
		class="com.nali.spreader.factory.passive.ProductLinePostAnnotationResolver" />
	<bean id="postAutowireProcessor" class="com.nali.spreader.util.autowire.PostAutowireProcessor">
		<property name="annotationResolvers">
			<list>
				<ref bean="productLineAnnotationResolver" />
			</list>
		</property>
	</bean>
	<!-- end autowire -->

	<!-- remote -->
	<bean id="loginConfigManageService"
		class="org.springframework.remoting.caucho.HessianProxyFactoryBean">
		<property name="serviceUrl"
			value="${front.hessian}/internal/hessian/loginConfigManageService" />
		<property name="serviceInterface"
			value="com.nali.spreader.remote.ILoginConfigManageService" />
	</bean>

	<!-- remote end -->

	<!-- redisTemplate -->
	<bean id="redisTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory">
			<bean class="com.nali.lwtmq.core.connection.JedisConnectionPoolFactory">
				<property name="hostName" value="#{redis['redis.host']}"></property>
				<property name="password" value="#{redis['redis.password']}"></property>
				<property name="port" value="#{redis['redis.port']}"></property>
				<property name="databaseIndex" value="#{redis['redis.database']}"></property>
				<property name="timeout" value="#{redis['redis.timeout']}"></property>
				<property name="poolConfig">
					<bean class="redis.clients.jedis.JedisPoolConfig">
						<property name="maxActive" value="#{redis['redis.connectionCount']}"></property>
						<property name="minIdle" value="#{redis['redis.connectionCount']}"></property>
						<property name="maxIdle" value="#{redis['redis.connectionCount']}"></property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="keySerializer">
			<bean
				class="org.springframework.data.redis.serializer.StringRedisSerializer" />
		</property>
	</bean>

	<!-- redisTemplate -->
	<bean id="stringRedisSerializer"
		class="org.springframework.data.redis.serializer.StringRedisSerializer" />
	<bean id="collecterTemplate" class="org.springframework.data.redis.core.RedisTemplate">
		<property name="connectionFactory">
			<bean class="com.nali.lwtmq.core.connection.JedisConnectionPoolFactory">
				<property name="hostName" value="#{redis['redis.host']}"></property>
				<property name="password" value="#{redis['redis.password']}"></property>
				<property name="port" value="#{redis['redis.port']}"></property>
				<property name="databaseIndex" value="#{redis['redis.database']}"></property>
				<property name="timeout" value="#{redis['redis.timeout']}"></property>
				<property name="poolConfig">
					<bean class="redis.clients.jedis.JedisPoolConfig">
						<property name="maxActive" value="#{redis['redis.connectionCount']}"></property>
						<property name="minIdle" value="#{redis['redis.connectionCount']}"></property>
						<property name="maxIdle" value="#{redis['redis.connectionCount']}"></property>
					</bean>
				</property>
			</bean>
		</property>
		<property name="keySerializer" ref="stringRedisSerializer">
		</property>
		<property name="valueSerializer" ref="stringRedisSerializer">
		</property>
		<property name="hashValueSerializer" ref="stringRedisSerializer">
		</property>
	</bean>

	<import resource="classpath:application-lwtmq-context.xml" />
	<import resource="classpath:application-lts-context.xml" />

	<bean id="identityService" class="com.nali.spreader.test.identity.MockIdentityService"></bean>

	<bean id="redisHashSimpleCountCollecter"
		class="com.nali.stat.dc.collecter.RedisHashSimpleCountCollecter">
		<property name="moduleName" value="spreader"></property>
	</bean>
</beans>