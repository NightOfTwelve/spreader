package com.nali.spreader.model;

import com.nali.common.model.Limit;
import com.nali.common.model.Shard;
import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

public class RelationExample {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Sat Mar 12 17:16:39 CST 2011
     */
    public RelationExample() {
        oredCriteria = new ArrayList();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Sat Mar 12 17:16:39 CST 2011
     */
    protected RelationExample(RelationExample example) {
        this.orderByClause = example.orderByClause;
        this.oredCriteria = example.oredCriteria;
        this.limit = example.limit;
        this.shard = example.shard;
    }

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    protected String orderByClause;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    protected List oredCriteria;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    private Shard shard;

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    private Limit limit;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public List getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public void clear() {
        oredCriteria.clear();
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public void setShard(Shard shard) {
        this.shard = shard;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public void setLimit(Limit limit) {
        this.limit = limit;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_relation
     *
     * @ibatorgenerated Fri Mar 25 20:53:45 CST 2011
     */
    public static class Criteria {

        protected List criteriaWithoutValue;

        protected List criteriaWithSingleValue;

        protected List criteriaWithListValue;

        protected List criteriaWithBetweenValue;

        protected Criteria() {
            super();
            criteriaWithoutValue = new ArrayList();
            criteriaWithSingleValue = new ArrayList();
            criteriaWithListValue = new ArrayList();
            criteriaWithBetweenValue = new ArrayList();
        }

        public boolean isValid() {
            return criteriaWithoutValue.size() > 0 || criteriaWithSingleValue.size() > 0 || criteriaWithListValue.size() > 0 || criteriaWithBetweenValue.size() > 0;
        }

        public List getCriteriaWithoutValue() {
            return criteriaWithoutValue;
        }

        public List getCriteriaWithSingleValue() {
            return criteriaWithSingleValue;
        }

        public List getCriteriaWithListValue() {
            return criteriaWithListValue;
        }

        public List getCriteriaWithBetweenValue() {
            return criteriaWithBetweenValue;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteriaWithoutValue.add(condition);
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("value", value);
            criteriaWithSingleValue.add(map);
        }

        protected void addCriterion(String condition, List values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", values);
            criteriaWithListValue.add(map);
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            List list = new ArrayList();
            list.add(value1);
            list.add(value2);
            Map map = new HashMap();
            map.put("condition", condition);
            map.put("values", list);
            criteriaWithBetweenValue.add(map);
        }

        public Criteria andRelationIdIsNull() {
            addCriterion("relation_id is null");
            return this;
        }

        public Criteria andRelationIdIsNotNull() {
            addCriterion("relation_id is not null");
            return this;
        }

        public Criteria andRelationIdEqualTo(Integer value) {
            addCriterion("relation_id =", value, "relationId");
            return this;
        }

        public Criteria andRelationIdNotEqualTo(Integer value) {
            addCriterion("relation_id <>", value, "relationId");
            return this;
        }

        public Criteria andRelationIdGreaterThan(Integer value) {
            addCriterion("relation_id >", value, "relationId");
            return this;
        }

        public Criteria andRelationIdGreaterThanOrEqualTo(Integer value) {
            addCriterion("relation_id >=", value, "relationId");
            return this;
        }

        public Criteria andRelationIdLessThan(Integer value) {
            addCriterion("relation_id <", value, "relationId");
            return this;
        }

        public Criteria andRelationIdLessThanOrEqualTo(Integer value) {
            addCriterion("relation_id <=", value, "relationId");
            return this;
        }

        public Criteria andRelationIdIn(List values) {
            addCriterion("relation_id in", values, "relationId");
            return this;
        }

        public Criteria andRelationIdNotIn(List values) {
            addCriterion("relation_id not in", values, "relationId");
            return this;
        }

        public Criteria andRelationIdBetween(Integer value1, Integer value2) {
            addCriterion("relation_id between", value1, value2, "relationId");
            return this;
        }

        public Criteria andRelationIdNotBetween(Integer value1, Integer value2) {
            addCriterion("relation_id not between", value1, value2, "relationId");
            return this;
        }

        public Criteria andRelationNameIsNull() {
            addCriterion("relation_name is null");
            return this;
        }

        public Criteria andRelationNameIsNotNull() {
            addCriterion("relation_name is not null");
            return this;
        }

        public Criteria andRelationNameEqualTo(String value) {
            addCriterion("relation_name =", value, "relationName");
            return this;
        }

        public Criteria andRelationNameNotEqualTo(String value) {
            addCriterion("relation_name <>", value, "relationName");
            return this;
        }

        public Criteria andRelationNameGreaterThan(String value) {
            addCriterion("relation_name >", value, "relationName");
            return this;
        }

        public Criteria andRelationNameGreaterThanOrEqualTo(String value) {
            addCriterion("relation_name >=", value, "relationName");
            return this;
        }

        public Criteria andRelationNameLessThan(String value) {
            addCriterion("relation_name <", value, "relationName");
            return this;
        }

        public Criteria andRelationNameLessThanOrEqualTo(String value) {
            addCriterion("relation_name <=", value, "relationName");
            return this;
        }

        public Criteria andRelationNameLike(String value) {
            addCriterion("relation_name like", value, "relationName");
            return this;
        }

        public Criteria andRelationNameNotLike(String value) {
            addCriterion("relation_name not like", value, "relationName");
            return this;
        }

        public Criteria andRelationNameIn(List values) {
            addCriterion("relation_name in", values, "relationName");
            return this;
        }

        public Criteria andRelationNameNotIn(List values) {
            addCriterion("relation_name not in", values, "relationName");
            return this;
        }

        public Criteria andRelationNameBetween(String value1, String value2) {
            addCriterion("relation_name between", value1, value2, "relationName");
            return this;
        }

        public Criteria andRelationNameNotBetween(String value1, String value2) {
            addCriterion("relation_name not between", value1, value2, "relationName");
            return this;
        }

        public Criteria andRelationLevelIsNull() {
            addCriterion("relation_level is null");
            return this;
        }

        public Criteria andRelationLevelIsNotNull() {
            addCriterion("relation_level is not null");
            return this;
        }

        public Criteria andRelationLevelEqualTo(Integer value) {
            addCriterion("relation_level =", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelNotEqualTo(Integer value) {
            addCriterion("relation_level <>", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelGreaterThan(Integer value) {
            addCriterion("relation_level >", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelGreaterThanOrEqualTo(Integer value) {
            addCriterion("relation_level >=", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelLessThan(Integer value) {
            addCriterion("relation_level <", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelLessThanOrEqualTo(Integer value) {
            addCriterion("relation_level <=", value, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelIn(List values) {
            addCriterion("relation_level in", values, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelNotIn(List values) {
            addCriterion("relation_level not in", values, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelBetween(Integer value1, Integer value2) {
            addCriterion("relation_level between", value1, value2, "relationLevel");
            return this;
        }

        public Criteria andRelationLevelNotBetween(Integer value1, Integer value2) {
            addCriterion("relation_level not between", value1, value2, "relationLevel");
            return this;
        }
    }
}
