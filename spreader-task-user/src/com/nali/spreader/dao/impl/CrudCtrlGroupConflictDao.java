package com.nali.spreader.dao.impl;

import java.util.List;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.orm.ibatis.SqlMapClientTemplate;
import org.springframework.stereotype.Repository;
import com.nali.spreader.dao.ICrudCtrlGroupConflictDao;
import com.nali.spreader.data.CtrlGroupConflict;
import com.nali.spreader.data.CtrlGroupConflictExample;
import org.springframework.orm.ibatis.support.SqlMapClientDaoSupport;

@Repository
public class CrudCtrlGroupConflictDao implements ICrudCtrlGroupConflictDao {

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Wed Mar 28 17:26:45 CST 2012
     */
    public CrudCtrlGroupConflictDao() {
        super();
    }

    /**
     * This field was generated by Apache iBATIS ibator.
     * This field corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    @Autowired
    private SqlMapClientTemplate sqlMap;

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int countByExample(CtrlGroupConflictExample example) {
        Integer count = (Integer) getSqlMapClientTemplate().queryForObject("spreader_tb_ctrl_group_conflict.ibatorgenerated_countByExample", example);
        return count;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int deleteByExample(CtrlGroupConflictExample example) {
        int rows = getSqlMapClientTemplate().delete("spreader_tb_ctrl_group_conflict.ibatorgenerated_deleteByExample", example);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int deleteByPrimaryKey(Long id) {
        CtrlGroupConflict key = new CtrlGroupConflict();
        key.setId(id);
        int rows = getSqlMapClientTemplate().delete("spreader_tb_ctrl_group_conflict.ibatorgenerated_deleteByPrimaryKey", key);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void insert(CtrlGroupConflict record) {
        getSqlMapClientTemplate().insert("spreader_tb_ctrl_group_conflict.ibatorgenerated_insert", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public void insertSelective(CtrlGroupConflict record) {
        getSqlMapClientTemplate().insert("spreader_tb_ctrl_group_conflict.ibatorgenerated_insertSelective", record);
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    @SuppressWarnings("unchecked")
    public List<CtrlGroupConflict> selectByExample(CtrlGroupConflictExample example) {
        List<CtrlGroupConflict> list = getSqlMapClientTemplate().queryForList("spreader_tb_ctrl_group_conflict.ibatorgenerated_selectByExample", example);
        return list;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public CtrlGroupConflict selectByPrimaryKey(Long id) {
        CtrlGroupConflict key = new CtrlGroupConflict();
        key.setId(id);
        CtrlGroupConflict record = (CtrlGroupConflict) getSqlMapClientTemplate().queryForObject("spreader_tb_ctrl_group_conflict.ibatorgenerated_selectByPrimaryKey", key);
        return record;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int updateByExampleSelective(CtrlGroupConflict record, CtrlGroupConflictExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("spreader_tb_ctrl_group_conflict.ibatorgenerated_updateByExampleSelective", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int updateByExample(CtrlGroupConflict record, CtrlGroupConflictExample example) {
        UpdateByExampleParms parms = new UpdateByExampleParms(record, example);
        int rows = getSqlMapClientTemplate().update("spreader_tb_ctrl_group_conflict.ibatorgenerated_updateByExample", parms);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int updateByPrimaryKeySelective(CtrlGroupConflict record) {
        int rows = getSqlMapClientTemplate().update("spreader_tb_ctrl_group_conflict.ibatorgenerated_updateByPrimaryKeySelective", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public int updateByPrimaryKey(CtrlGroupConflict record) {
        int rows = getSqlMapClientTemplate().update("spreader_tb_ctrl_group_conflict.ibatorgenerated_updateByPrimaryKey", record);
        return rows;
    }

    /**
     * This method was generated by Apache iBATIS ibator.
     * This method corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    public SqlMapClientTemplate getSqlMapClientTemplate() {
        return sqlMap;
    }

    /**
     * This class was generated by Apache iBATIS ibator.
     * This class corresponds to the database table spreader.tb_ctrl_group_conflict
     *
     * @ibatorgenerated Thu Apr 19 17:43:13 CST 2012
     */
    private static class UpdateByExampleParms extends CtrlGroupConflictExample {

        private Object record;

        public UpdateByExampleParms(Object record, CtrlGroupConflictExample example) {
            super(example);
            this.record = record;
        }

        public Object getRecord() {
            return record;
        }
    }
}
